name: Build PAnEn

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        BUILD_BOOST: ['ON', 'OFF']
        ENABLE_MPI: ['ON', 'OFF']

    steps:
    - uses: actions/checkout@v2
      
    - name: Install NetCDF and Unit test
      run: sudo apt-get install libnetcdf-dev libnetcdf-c++4-dev libcppunit-dev
      
    - name: Install Eccodes
      run: ${{github.workspace}}/CAnEnIO/cmake/install_eccodes.sh
    
    - name: Install Boost if CMake is not installing
      run: if ${BUILD_BOOST} == 'OFF'; then sudo apt-get install libboost-all-dev; fi
    
    - name: Install MPI
      run: if ${ENABLE_MPI} == 'ON'; then sudo apt-get install libopenmpi-dev; fi

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake -DBUILD_BOOST=$BUILD_BOOST -DENABLE_MPI=$ENABLE_MPI $GITHUB_WORKSPACE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build .

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: if ${ENABLE_MPI} ==  'ON'; then mpirun -np 4 ctest; else ctest; fi
        
