<map id="type_caster&lt; std::shared_ptr&lt; T &gt; &gt;" name="type_caster&lt; std::shared_ptr&lt; T &gt; &gt;">
<area shape="rect" id="node2" href="$structcopyable__holder__caster.html" title="{copyable_holder_caster\l\&lt; T, std::shared_ptr\&lt; T \&gt; \&gt;\n|# holder\l|+ load()\l+ operator T *()\l+ operator T &amp;()\l+ operator std::shared\l_ptr\&lt; T \&gt; *()\l+ operator std::shared\l_ptr\&lt; T \&gt; &amp;()\l+ cast()\l# check_holder_compat()\l# load_value()\l# try_implicit_casts()\l# try_implicit_casts()\l# try_direct_conversions()\l}" alt="" coords="124,1733,305,2001"/>
<area shape="rect" id="node3" href="$classtype__caster__base.html" title="{type_caster_base\&lt; T \&gt;\n|+ name\l|+ type_caster_base()\l+ type_caster_base()\l+ operator itype *()\l+ operator itype &amp;()\l+ cast()\l+ cast()\l+ cast()\l+ src_and_type()\l+ cast_holder()\l# make_copy_constructor()\l# make_copy_constructor()\l# make_move_constructor()\l# make_move_constructor()\l}" alt="" coords="232,1403,416,1656"/>
<area shape="rect" id="node4" href="$classtype__caster__generic.html" title="{type_caster_generic\n|+ cpptype\l+ value\l|+ type_caster_generic()\l+ type_caster_generic()\l+ load()\l+ load_value()\l+ try_implicit_casts()\l+ try_direct_conversions()\l+ check_holder_compat()\l+ try_load_foreign_module\l_local()\l+ load_impl()\l+ cast()\l+ local_load()\l+ src_and_type()\l}" alt="" coords="207,769,382,1037"/>
<area shape="rect" id="node7" href="$classtype__caster__base.html" title="Generic type caster for objects stored on the heap. " alt="" coords="139,1087,323,1340"/>
<area shape="rect" id="node5" href="$structtype__info.html" title="{type_info\n|+ type\l+ cpptype\l+ type_size\l+ type_align\l+ holder_size_in_ptrs\l+ operator_new\l+ init_instance\l+ dealloc\l+ implicit_conversions\l+ implicit_casts\land 7 more...\l|}" alt="" coords="219,483,371,707"/>
<area shape="rect" id="node6" href="$structbuffer__info.html" title="Information record describing a Python buffer object. " alt="" coords="239,5,350,420"/>
<area shape="rect" id="node8" href="$structcopyable__holder__caster.html" title="{copyable_holder_caster\l\&lt; type, holder_type, SFINAE \&gt;\n||+ load()\l+ operator type *()\l+ operator type &amp;()\l+ operator holder_type *()\l+ operator holder_type &amp;()\l+ cast()\l# check_holder_compat()\l# load_value()\l# try_implicit_casts()\l# try_implicit_casts()\l# try_direct_conversions()\l}" alt="" coords="5,1410,208,1649"/>
</map>
