<map id="type_caster&lt; std::shared_ptr&lt; T &gt; &gt;" name="type_caster&lt; std::shared_ptr&lt; T &gt; &gt;">
<area shape="rect" id="node2" href="$structcopyable__holder__caster.html" title="{copyable_holder_caster\l\&lt; T, std::shared_ptr\&lt; T \&gt; \&gt;\n|# holder\l|+ load()\l+ operator T *()\l+ operator T &amp;()\l+ operator std::shared\l_ptr\&lt; T \&gt; *()\l+ operator std::shared\l_ptr\&lt; T \&gt; &amp;()\l+ cast()\l# check_holder_compat()\l# load_value()\l# try_implicit_casts()\l# try_implicit_casts()\l# try_direct_conversions()\l}" alt="" coords="115,984,296,1252"/>
<area shape="rect" id="node3" href="$classtype__caster__base.html" title="{type_caster_base\&lt; T \&gt;\n|+ name\l|+ type_caster_base()\l+ type_caster_base()\l+ operator itype *()\l+ operator itype &amp;()\l+ cast()\l+ cast()\l+ cast()\l+ src_and_type()\l+ cast_holder()\l# make_copy_constructor()\l# make_copy_constructor()\l# make_move_constructor()\l# make_move_constructor()\l}" alt="" coords="5,653,189,907"/>
<area shape="rect" id="node4" href="$classtype__caster__generic.html" title="{type_caster_generic\n|+ typeinfo\l+ cpptype\l+ value\l|+ type_caster_generic()\l+ type_caster_generic()\l+ load()\l+ load_value()\l+ try_implicit_casts()\l+ try_direct_conversions()\l+ check_holder_compat()\l+ try_load_foreign_module\l_local()\l+ load_impl()\l+ cast()\l+ local_load()\l+ src_and_type()\l}" alt="" coords="26,5,201,288"/>
<area shape="rect" id="node5" href="$classtype__caster__base.html" title="Generic type caster for objects stored on the heap. " alt="" coords="135,337,319,591"/>
<area shape="rect" id="node6" href="$structcopyable__holder__caster.html" title="{copyable_holder_caster\l\&lt; type, holder_type, SFINAE \&gt;\n|# holder\l|+ load()\l+ operator type *()\l+ operator type &amp;()\l+ operator holder_type *()\l+ operator holder_type &amp;()\l+ cast()\l# check_holder_compat()\l# load_value()\l# try_implicit_casts()\l# try_implicit_casts()\l# try_direct_conversions()\l}" alt="" coords="213,661,416,899"/>
</map>
