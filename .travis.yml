fortran: false
env:
    global:
        - CODECOV_TOKEN=11fbe283-94bd-4eca-88d0-a3083178cf25
matrix:
    include:

        ###############################################################
        # Test on Linux machines with different version of compilers  #
        ###############################################################
        #
        # Test PAnEn installation
        #
        # Boost is compiled within the CMake process
        #
        -
            os: linux
            language: cpp
            addons: {apt: {sources: [ubuntu-toolchain-r-test], packages: [g++-5, libnetcdf-dev, libnetcdf-c++4-dev, libcppunit-dev]}}
            env: ['MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"', 'ENVIRONMENT_LANGUAGE="c++"', 'RUN_INSTALL_SCRIPTS="YES"', 'BUILD_BOOST="ON"', 'ENABLE_MPI="OFF"']
        -
            os: linux
            language: cpp
            addons: {apt: {sources: [ubuntu-toolchain-r-test], packages: [g++-6, libnetcdf-dev, libnetcdf-c++4-dev, libcppunit-dev]}}
            env: ['MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"', 'ENVIRONMENT_LANGUAGE="c++"', 'RUN_INSTALL_SCRIPTS="YES"', 'BUILD_BOOST="ON"', 'ENABLE_MPI="OFF"']
        -
            os: linux
            language: cpp
            addons: {apt: {sources: [ubuntu-toolchain-r-test], packages: [g++-7, libnetcdf-dev, libnetcdf-c++4-dev, libcppunit-dev]}}
            env: ['MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"', 'ENVIRONMENT_LANGUAGE="c++"', 'RUN_INSTALL_SCRIPTS="YES"', 'BUILD_BOOST="ON"', 'ENABLE_MPI="OFF"']
        -
            os: linux
            language: cpp
            addons: {apt: {sources: [ubuntu-toolchain-r-test], packages: [g++-8, libnetcdf-dev, libnetcdf-c++4-dev, libcppunit-dev]}}
            env: ['MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"', 'ENVIRONMENT_LANGUAGE="c++"', 'RUN_INSTALL_SCRIPTS="YES"', 'BUILD_BOOST="ON"', 'ENABLE_MPI="OFF"']

        #
        # Test PAnEn installation with MPI
        #
        # Boost is installed using system package manager
        #
        -
            os: linux
            language: cpp
            addons: {apt: {sources: [ubuntu-toolchain-r-test], packages: [g++-5, libnetcdf-dev, libnetcdf-c++4-dev, libcppunit-dev, libboost-all-dev, libopenmpi-dev]}}
            env: ['MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"', 'ENVIRONMENT_LANGUAGE="c++"', 'RUN_INSTALL_SCRIPTS="YES"', 'BUILD_BOOST="OFF"', 'ENABLE_MPI="ON"']
        -
            os: linux
            language: cpp
            addons: {apt: {sources: [ubuntu-toolchain-r-test], packages: [g++-6, libnetcdf-dev, libnetcdf-c++4-dev, libcppunit-dev, libboost-all-dev, libopenmpi-dev]}}
            env: ['MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"', 'ENVIRONMENT_LANGUAGE="c++"', 'RUN_INSTALL_SCRIPTS="YES"', 'BUILD_BOOST="OFF"', 'ENABLE_MPI="ON"']
        -
            os: linux
            language: cpp
            addons: {apt: {sources: [ubuntu-toolchain-r-test], packages: [g++-7, libnetcdf-dev, libnetcdf-c++4-dev, libcppunit-dev, libboost-all-dev, libopenmpi-dev]}}
            env: ['MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"', 'ENVIRONMENT_LANGUAGE="c++"', 'RUN_INSTALL_SCRIPTS="YES"', 'BUILD_BOOST="OFF"', 'ENABLE_MPI="ON"']
        -
            os: linux
            language: cpp
            addons: {apt: {sources: [ubuntu-toolchain-r-test], packages: [g++-8, libnetcdf-dev, libnetcdf-c++4-dev, libcppunit-dev, libboost-all-dev, libopenmpi-dev]}}
            env: ['MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"', 'ENVIRONMENT_LANGUAGE="c++"', 'RUN_INSTALL_SCRIPTS="YES"', 'BUILD_BOOST="OFF"', 'ENABLE_MPI="ON"']


        #
        # Test PAnEn installation
        #
        # Boost is installed using system package manager
        #
        -
            os: linux
            language: cpp
            addons: {apt: {sources: [ubuntu-toolchain-r-test], packages: [g++-5, libnetcdf-dev, libnetcdf-c++4-dev, libcppunit-dev, libboost-all-dev]}}
            env: ['MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"', 'ENVIRONMENT_LANGUAGE="c++"', 'RUN_INSTALL_SCRIPTS="YES"', 'BUILD_BOOST="OFF"', 'ENABLE_MPI="OFF"']
        -
            os: linux
            language: cpp
            addons: {apt: {sources: [ubuntu-toolchain-r-test], packages: [g++-6, libnetcdf-dev, libnetcdf-c++4-dev, libcppunit-dev, libboost-all-dev]}}
            env: ['MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"', 'ENVIRONMENT_LANGUAGE="c++"', 'RUN_INSTALL_SCRIPTS="YES"', 'BUILD_BOOST="OFF"', 'ENABLE_MPI="OFF"']
        -
            os: linux
            language: cpp
            addons: {apt: {sources: [ubuntu-toolchain-r-test], packages: [g++-7, libnetcdf-dev, libnetcdf-c++4-dev, libcppunit-dev, libboost-all-dev]}}
            env: ['MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"', 'ENVIRONMENT_LANGUAGE="c++"', 'RUN_INSTALL_SCRIPTS="YES"', 'BUILD_BOOST="OFF"', 'ENABLE_MPI="OFF"']
        -
            os: linux
            language: cpp
            addons: {apt: {sources: [ubuntu-toolchain-r-test], packages: [g++-8, libnetcdf-dev, libnetcdf-c++4-dev, libcppunit-dev, libboost-all-dev]}}
            env: ['MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"', 'ENVIRONMENT_LANGUAGE="c++"', 'RUN_INSTALL_SCRIPTS="YES"', 'BUILD_BOOST="OFF"', 'ENABLE_MPI="OFF"']

        #
        # Test RAnEn installation
        #
        # NetCDF is pre-installed
        #
        -
            os: linux
            language: r
            cache: Rcpp
            addons: {apt: {sources: [ubuntu-toolchain-r-test], packages: [g++-5]}}
            env: ['ENVIRONMENT_LANGUAGE="r"']


        ###############################################################
        #                Test on Mac OS machines                      #
        ###############################################################
        #
        # Test PAnEn installation
        #
        # Boost is installed with the system package manager. Actually it is already installed,
        # so I don't have to install it manually
        #
        -
            os: osx
            language: cpp
            env: ['MATRIX_EVAL="brew install eccodes cppunit"', 'ENVIRONMENT_LANGUAGE="c++"', 'BUILD_BOOST="OFF"', 'ENABLE_MPI="OFF"']

        #
        # Test PAnEn installation with MPI
        #
        # Boost is compiled within the CMake process
        #
        -
            os: osx
            language: cpp
            env: ['MATRIX_EVAL="brew install eccodes cppunit open-mpi"', 'ENVIRONMENT_LANGUAGE="c++"', 'BUILD_BOOST="ON"', 'ENABLE_MPI="ON"']


        #
        # Test PAnEn installation
        #
        # Boost is compiled within the CMake process
        #
        -
            os: osx
            language: cpp
            env: ['MATRIX_EVAL="brew install eccodes cppunit"', 'ENVIRONMENT_LANGUAGE="c++"', 'BUILD_BOOST="ON"', 'ENABLE_MPI="OFF"']

        #
        # Test RAnEn installation
        #
        # Boost is installed with the system package manager
        #
        # Looks like NetCDF is already installed so I don't need to manually install it again.
        #
        -
            os: osx
            language: r
            cache: Rcpp
            env: ['ENVIRONMENT_LANGUAGE="r"']

before_install:
    - cmake --version
    - eval "${MATRIX_EVAL}"
    - if [[ "$ENVIRONMENT_LANGUAGE" == "r" ]]; then R -e "install.packages(c('abind', 'Rcpp', 'BH'))";fi
    - if [[ "$RUN_INSTALL_SCRIPTS" == "YES" ]]; then ./CAnEnIO/cmake/install_eccodes.sh; fi
install:
    - if [[ "$ENVIRONMENT_LANGUAGE" == "r" ]]; then R CMD INSTALL RAnalogs/releases/RAnEn_latest.tar.gz; fi
script:
    - if [[ "$ENVIRONMENT_LANGUAGE" == "c++" ]]; then mkdir build; cd build; CC=$CC CXX=$CXX cmake -DENABLE_MPI=$ENABLE_MPI -DBUILD_BOOST=$BUILD_BOOST -DCMAKE_CXX_FLAGS="-coverage" -DCMAKE_PREFIX_PATH=~/eccodes ..; make -j16; fi
after_success:
    - if [[ "$ENVIRONMENT_LANGUAGE" == "c++" ]]; then if [[ "$ENABLE_MPI" == "ON" ]]; then mpirun -np 3 ctest; else make test; fi; fi
    - if [[ "$ENVIRONMENT_LANGUAGE" == "r" ]]; then cd RAnalogs/tests; Rscript test_R-API-v4.R; fi
    - if [[ "$ENVIRONMENT_LANGUAGE" == "c++" ]]; then if [[ "CC" == "gcc-8" ]]; then bash <(curl -s https://codecov.io/bash); fi; fi

